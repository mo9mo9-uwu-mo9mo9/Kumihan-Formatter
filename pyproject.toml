[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kumihan-formatter"
version = "0.9.0-alpha.8"
description = "CoC6th同人シナリオなどのテキストファイルをワンコマンドで配布可能なHTMLに自動組版するCLIツール"
authors = [{name = "mo9mo9-uwu-mo9mo9"}]
readme = "README.md"
requires-python = ">=3.12"
license = {text = "Proprietary"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "click>=8.0",
    "jinja2>=3.0",
    "rich>=13.0",
    "watchdog>=3.0",
    "pyyaml>=6.0",
    "pydantic>=2.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.11.0",
    "aiofiles>=23.0",
    "toml>=0.10",
    "tomli>=1.2.0",
]

[project.scripts]
kumihan = "kumihan_formatter.cli:main"

[project.optional-dependencies]
dev = [
    "black>=23.0",
    "isort>=5.0",
    "flake8>=6.0",
    "beautifulsoup4>=4.9",
    "psutil>=5.9",
    "mypy>=1.0",
    "types-psutil",
    "types-PyYAML",
    "types-aiofiles",
    "types-toml",
    "types-requests",
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "pytest-benchmark>=4.0",
    "pytest-xdist>=3.0",      # 並列テスト実行
    "pytest-timeout>=2.1",    # テストタイムアウト制御
    "pytest-sugar>=0.9",      # テスト出力の改善
    # 技術的負債監視ライブラリ (Issue #823)
    "radon>=6.0",        # cognitive complexity, maintainability index
    "xenon>=0.9",        # 複雑度測定
    # "duplicated>=2.0",   # 重複コード検出 (パッケージが存在しないため無効化)
    "vulture>=2.0",      # デッドコード検出
]
performance = [
    "psutil>=5.9",  # メモリ使用量追跡用
]
ai_optimization = [
    "lightgbm>=4.0.0",  # 高精度予測モデル
    "xgboost>=2.0.0",   # 補完的高精度学習
]

[tool.setuptools.packages.find]
exclude = ["dev*", "tools*"]

[tool.setuptools.package-data]
kumihan_formatter = [
    "templates/*.html.j2",
    "templates/*.css",
    "templates/*.js",
    "templates/partials/*",
    "assets/*",
    "config/*.py",
    "models/*.py"
]


[tool.black]
line-length = 88
target-version = ['py312']


[tool.isort]
profile = "black"
line_length = 88

# バージョン管理設定
[tool.bumpversion]
current_version = "0.3.0-alpha.1"
commit = true
tag = true
tag_name = "v{new_version}"
message = "release: bump version to {new_version}"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "kumihan_formatter/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

# mypy設定 - Issue #831: 品質管理基盤構築
[tool.mypy]

python_version = "3.12"

# 基本設定 - 54件エラー基準の実用的設定
strict = false  # strict全体無効化、個別設定で制御

# 現在有効化可能な厳密性設定
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = false
warn_unused_configs = true

# 段階的strict化のため一時無効化（後続Issue対応）
disallow_untyped_defs = true       # Issue #832対応完了 (no-untyped-def)
disallow_any_generics = false      # Issue #834対応予定 (type-arg)
disallow_untyped_calls = false     # Issue #833対応予定 (no-untyped-call)
disallow_any_unimported = false    # 外部ライブラリ対応

# 外部ライブラリ対応での現実的緩和
disallow_subclassing_any = false     # 外部ライブラリ継承許可
disallow_untyped_decorators = false  # デコレータ周りは緩和
disallow_incomplete_defs = false     # 部分的型アノテーション許可

# 現在のエラー解決のための追加設定
check_untyped_defs = true           # 型なし関数でもチェック実行

# 除外設定を拡張
exclude = [
    "dist/.*",
    "build/.*",
    ".*/.egg-info/.*",
    "serena/.*",
    "scripts/.*",
    "tests/.*_legacy.*",
    "tests/performance/.*",
    "dev/.*",
    "tmp/.*"
]

# 外部ライブラリの型チェック設定
[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "optuna.*",
    "joblib.*",
    "lightgbm.*",
    "xgboost.*",
    "tomli.*"
]
ignore_missing_imports = true

# pytest設定
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"  # pytest-asyncioを自動モードで実行
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--cov=kumihan_formatter",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--maxfail=5",              # 5回失敗で停止
    "--timeout=300",            # 各テスト300秒でタイムアウト
    "--durations=10",           # 最も遅い10テストを表示
    # Issue #1049: xdist設定はconftest.pyで環境に応じて動的制御
    # "-n=auto" と "--dist=worksteal" はconftest.pyで適用される
]
# Issue #1005: xdist設定項目は未対応のため削除
# xdist設定は addopts の -n=auto と --dist=worksteal で対応
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "system: System integration tests",
    "slow: Slow running tests",
    "notation: Tests for notation system",
    "error_handling: Error handling tests",
    "core: Core functionality tests",
    "parser: Parser functionality tests",
    "cli: CLI functionality tests",
    "renderer: Renderer functionality tests",
    "benchmark: Benchmark performance tests",
    "commands: Command functionality tests",
    "keyword: Keyword parsing tests",
    "validator: Validation functionality tests",
    "convert: Convert processing tests",
    "utilities: Utility functionality tests",
    "progress: Progress tracking tests",
    "footnote: Footnote notation tests",
    "e2e: End-to-end tests",
    "asyncio: Async/await tests",
    "anyio: AnyIO async tests"
]
filterwarnings = [
    # Issue #1005: pytest実行時の警告メッセージ抑制設定
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::pytest.PytestConfigWarning",
    "ignore::pytest.PytestUnraisableExceptionWarning",
    "ignore::ResourceWarning",
    # pytest-benchmark警告は設定ファイルでは条件付き設定が困難なため、
    # Issue #1004: --benchmark-disableオプションで対応
]

# tox設定 - Issue #1107: pyenv + tox環境構築
[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py312,py313,lint
skip_missing_interpreters = true

[testenv]
deps =
    -e .[dev]
commands =
    # 単体テスト（CI並行実行同等）
    pytest tests/unit/ -n=auto --dist=worksteal -v --maxfail=5 --timeout=300
    # 結合テスト（シーケンシャル実行）
    pytest tests/integration/ -v --maxfail=3 --timeout=600

[testenv:unit]
deps =
    -e .[dev]
commands =
    pytest tests/unit/ -n=auto --dist=worksteal -v --maxfail=10 --timeout=300

[testenv:integration]
deps =
    -e .[dev]
commands =
    pytest tests/integration/ -v --maxfail=5 --timeout=600

[testenv:lint]
deps =
    -e .[dev]
commands =
    black --check kumihan_formatter
    isort --check-only kumihan_formatter
    flake8 kumihan_formatter
    mypy kumihan_formatter

[testenv:format]
deps =
    -e .[dev]
commands =
    black kumihan_formatter tests
    isort kumihan_formatter tests

[testenv:clean]
deps =
commands =
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
"""
