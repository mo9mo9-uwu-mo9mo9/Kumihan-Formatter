# 複合コンテンツサンプル - 実践的な記法活用例

#目次#

## 文書のイントロダクション

この文書では、Kumihan記法を#太字# 実践的#太字#に活用する方法を示します。
#イタリック# 単一の記法だけでなく、複数の記法を組み合わせることで#イタリック#、
より#下線# 表現豊かな文書#下線#を作成できます。

#注意#
⚠️ この文書は記法の組み合わせテストを目的としており、
実際のコンテンツとしての意味よりも、
技術的な動作確認に重点を置いています。
##

#見出し1#
第1章：基本的な組み合わせパターン
##

## 段落内での複数記法

通常のテキストの中に#太字# 重要な部分#太字#があり、
#イタリック# 引用や強調#イタリック#も含まれ、
#コード# function_name()#コード#のような関数名や、
#ハイライト color=yellow# 注目すべき箇所#ハイライト color=yellow#が
自然に混在している文章例です。

さらに#下線# アンダーライン#下線#や
#取り消し線# 削除された内容#取り消し線#も含めて、
一つの段落内で多様な表現を実現できます。

## 複合キーワードの活用

#太字+ハイライト color=#ffe6e6#
最重要情報：システムの基本仕様
##

#イタリック+枠線#
「記法の組み合わせにより、
より豊かな表現が可能になる」
- 開発チームからのコメント
##

#見出し2+太字#
重要な章：パフォーマンス最適化
##

この章では、#コード+ハイライト color=#f0f0f0# optimize_performance()#コード+ハイライト color=#f0f0f0#関数について説明します。

## 実践的なドキュメント例

#見出し3#
API仕様書の例
##

### エンドポイント一覧

#枠線+ハイライト color=#e1f5fe#
📡 REST API エンドポイント

GET /api/users - ユーザー一覧取得
POST /api/users - 新規ユーザー作成  
PUT /api/users/{id} - ユーザー情報更新
DELETE /api/users/{id} - ユーザー削除
##

### レスポンス例

#コードブロック#
{
  "status": 200,
  "data": {
    "users": [
      {
        "id": 1,
        "name": "田中太郎",
        "email": "tanaka@example.com",
        "created_at": "2025-01-01T00:00:00Z"
      }
    ]
  },
  "message": "正常に取得しました"
}
##

### エラーハンドリング

#注意#
⚠️ #太字# 認証エラー（401）#太字#
APIキーが無効または期限切れの場合に発生します。

#コード# Authorization: Bearer your_api_key#コード#
ヘッダーが正しく設定されているか確認してください。
##

#情報#
💡 #イタリック# レート制限について#イタリック#
1分間に100リクエストまでの制限があります。
制限を超えた場合は#ハイライト color=orange# 429エラー#ハイライト color=orange#が返されます。
##

## TRPGシナリオ例

#見出し2#
シナリオ：古い館の謎
##

### シーン1：到着

#枠線#
🏚️ 場面設定
場所：郊外の古い洋館
時間：夕暮れ時
天候：小雨
参加者：探索者3-4人
##

探索者たちは#イタリック# しとしとと降る雨の中#イタリック#、
古い#下線# ビクトリア様式の洋館#下線#の前に立っています。

#太字# 館の主人#太字#からの手紙には、こう書かれていました：

#引用#
「緊急にお手伝いいただきたいことがあります。
我が家で起きている#ハイライト color=#ffe6e6# 不可解な現象#ハイライト color=#ffe6e6#について、
ぜひご相談させていただきたく...」
##

### 重要な情報

#ネタバレ#
🔍 GM専用情報
真相：館の地下には古い研究施設があり、
過去の実験の影響で異常現象が発生している。
犯人は元研究員の#太字# 山田教授#太字#で、
現在も地下で実験を続けている。
##

### 調査ポイント

#折りたたみ#
📝 詳細な調査項目

1. #太字# 正面玄関#太字#
   - 技能：観察
   - 成功：古い血痕を発見
   - 失敗：特に異常なし

2. #太字# 図書室#太字#  
   - 技能：図書館
   - 成功：#コード# 「異次元物理学入門」#コード#を発見
   - 失敗：古い本ばかりでよくわからない

3. #太字# 地下への入口#太字#
   - 技能：聞き耳
   - 成功：#イタリック# 機械音のような音#イタリック#を聞く
   - 失敗：静寂のみ
##

## 技術文書例

#見出し2+ハイライト color=#f0f8ff#
システム要件と設定手順
##

### 必要な環境

#枠線#
🔧 システム要件

- OS: Windows 10/11, macOS 10.15+
- Python: 3.12以上
- RAM: 4GB以上推奨
- ストレージ: 1GB以上の空き容量
##

### インストール手順

#太字# Step 1: リポジトリのクローン#太字#

#コードブロック#
git clone https://github.com/example/kumihan-formatter.git
cd kumihan-formatter
##

#太字# Step 2: 依存関係のインストール#太字#

#コードブロック#
pip install -r requirements.txt
pip install -e .
##

#太字# Step 3: 動作確認#太字#

#コードブロック#
kumihan --version
kumihan convert sample.txt
##

### トラブルシューティング

#注意#
❌ #太字# よくあるエラー#太字#

1. #コード# ModuleNotFoundError#コード#
   → #ハイライト color=#fff3cd# 仮想環境が正しく設定されていない#ハイライト color=#fff3cd#

2. #コード# Permission denied#コード#  
   → #ハイライト color=#ffe6e6# 管理者権限で実行してください#ハイライト color=#ffe6e6#

3. #コード# UnicodeDecodeError#コード#
   → #ハイライト color=#e6ffe6# ファイルをUTF-8で保存してください#ハイライト color=#e6ffe6#
##

## 中央寄せを使った締めくくり

#中央寄せ#
✨ 複合記法テスト完了 ✨

このサンプルファイルでは、様々な記法の組み合わせを
実践的な文書形式で確認できました。

#太字# 記法の力で、より豊かな表現を！#太字#
##

#情報#
💡 このサンプルファイルには以下の要素が含まれています：
- 段落内での複数記法の混在
- 複合キーワードの活用
- API仕様書風の技術文書  
- TRPGシナリオの実例
- システム要件とトラブルシューティング
- 中央寄せによる装飾的な締めくくり

すべての記法が正しく動作することを確認してください。
##