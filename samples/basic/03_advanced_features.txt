# 見出し1 #
Kumihan-Formatter 高度機能・将来機能テストサンプル
##

このサンプルファイルは、Kumihanフォーマッターの高度な機能と将来実装予定の記法をテストし、
エッジケースや複雑な構造の処理能力を検証します。

# 見出し2 #
極限まで複雑化した記法組み合わせ
##

# 見出し3 #
多層ネスト構造テスト
##

# 枠線 #
## 最外層の枠線ブロック

この枠線内には、さらに複雑な構造が含まれています：

# 折りたたみ #
### 折りたたみ可能なセクション

# 注意 #
## ⚠️ 注意ブロック内の複雑な記法

このブロック内では、# 太字 color=red # 赤色太字 ## と # イタリック color=blue # 青色イタリック ## 、
# ハイライト color=#ff6b6b # カスタムハイライト ## が同時に使用されています。

さらに、# コードブロック #
```python
# 注意ブロック内のコードブロック
def complex_nested_function():
    """多層ネスト構造内のコード例"""
    result = {
        "status": "success",
        "data": nested_processing()
    }
    return result
```
## も含まれています。
##

# 情報 #
## 📘 情報ブロック内の詳細情報

# 引用 #
"複雑なネスト構造でも、# 太字 # 正確な ## 処理が重要です。"
— # イタリック color=purple # 開発チーム ## より
##

リスト形式での機能説明：
• # ハイライト color=green # 完全実装済み ## の基本機能
• # ハイライト color=orange # 実装中 ## の拡張機能  
• # ハイライト color=red # 計画中 ## の将来機能
##
##
##

# 見出し2 #
将来実装予定記法の先行テスト
##

# 見出し3 #
脚注記法テスト（基本検証実装済み）
##

これは脚注付きのテキストです((脚注1: 基本的な脚注の例です))。
複数の脚注((脚注2: 2番目の脚注))も使用可能で、
長い説明が必要な場合の脚注((脚注3: より詳細な説明を含む脚注の例。この機能は将来的にドキュメント末尾への自動移動機能が実装される予定です))も対応予定です。

技術文書での脚注使用例：
- API仕様((API脚注: REST API v2.1に基づく))
- 設定項目((設定脚注: config.yamlの詳細はドキュメント参照))
- 互換性情報((互換性脚注: Python 3.12以上で動作確認済み))

# 見出し3 #
傍注記法テスト（将来実装予定）
##

# 注意 #
以下の記法は将来実装予定のため、現在は未対応です。
##

日本語の#ルビ 複雑(ふくざつ)#な#ルビ 表現(ひょうげん)#において、#ルビ 傍注(ぼうちゅう)#（ルビ）機能の
#ルビ 実装(じっそう)#が#ルビ 計画(けいかく)#されています。

これにより、#ルビ 専門(せんもん)##ルビ 用語(ようご)#や#ルビ 固有(こゆう)##ルビ 名詞(めいし)#に
#ルビ 読(よ)#み#ルビ 方(かた)#を#ルビ 併記(へいき)#することが可能になります。

# 見出し2 #
パフォーマンス限界テスト
##

# 見出し3 #
高密度記法集約テスト
##

# 枠線 #
この段落は意図的に高密度な記法を配置し、パーサーの処理能力をテストします：
# 太字 color=red # RED ## # イタリック color=blue # BLUE ## # 下線 color=green # GREEN ## # ハイライト color=yellow # YELLOW ## # コード # code() ## # 取り消し線 # STRIKE ## # ハイライト color=#ff6b6b # CUSTOM1 ## # ハイライト color=#4ecdc4 # CUSTOM2 ## # 太字 color=#45b7d1 # CUSTOM3 ## のような # イタリック color=#96ceb4 # 多数の ## # 下線 color=#ffeaa7 # 記法が ## # ハイライト color=#dda0dd # 連続して ## 配置されています。
##

# 見出し3 #
記法境界テスト
##

# 情報 #
記法の境界ケーステスト：

1. 連続する記法: # 太字 ## # イタリック ## # 下線 ## (間隔なし)
2. 重複マーカー: #### 見出し ### のような不正な ## マーカー ##
3. 不完全な記法: # 太字 のような終了マーカー不足
4. 空の記法: # 太字 ## ## (空のコンテンツ)
5. 特殊文字を含む記法: # コード # special_chars@#$%^&*() ##
##

# 見出し2 #
エラーハンドリングテスト
##

# 見出し3 #
意図的な構文エラーテスト
##

# 注意 #
以下は意図的な構文エラーを含むテストパターンです：
##

# 太字 color=存在しない色 #
存在しない色名でのテスト
##

# ハイライト color=#gggggg #
不正な16進数カラーコードでのテスト
##

# 存在しないキーワード #
未定義キーワードでのテスト
##

# 見出し3 #
マーカー不整合テスト
##

# 太字 #
終了マーカーが異なるケース
###

## 太字 #
開始マーカーが異なるケース
##

# 見出し2 #
メタデータとドキュメント構造テスト
##

# 見出し3 #
複雑なドキュメント構造
##

# 情報 #
## 📋 プロジェクト仕様書

### プロジェクト概要
# 枠線 #
プロジェクト名: # 太字 # Kumihan-Formatter Advanced Test ##
バージョン: # コード # v2.2.0-alpha ##
開発状況: # ハイライト color=green # Phase 4完了 ##
##

### 技術仕様

# 折りたたみ #
#### システム要件

# コードブロック #
```yaml
system_requirements:
  python_version: ">=3.12"
  memory: ">=4GB"
  storage: ">=1GB"
  
supported_formats:
  input: ["txt", "md", "kumihan"]
  output: ["html", "pdf", "epub"]

performance_targets:
  max_file_size: "100MB"
  processing_speed: "1000 lines/sec"
  memory_usage: "<500MB"
```
##

#### パフォーマンス指標
- 処理速度: # ハイライト color=blue # 1000行/秒 ## 以上
- メモリ使用量: # ハイライト color=orange # 500MB ## 以下  
- 最大ファイルサイズ: # ハイライト color=red # 100MB ## まで対応
##

### 開発ロードマップ

# 引用 #
"Phase 5では、# 太字 # 表組み機能 ## と # イタリック # 高度なレイアウト機能 ## の実装を予定しています。"
##
##

# 見出し2 #
Unicode・国際化対応テスト
##

# 見出し3 #
多言語混在テスト
##

# ハイライト color=cyan #
English text with 日本語混在 and русский текст, plus العربية
##

# コード #
emoji_test = "🚀✨🎯🔥💡⚡🌟🎉🏆🔧"
##

# 見出し3 #
特殊Unicode文字テスト
##

# 太字 #
数学記号: ∑∏∫∆∇∂∞∈∉⊂⊃∪∩
##

# イタリック #
矢印記号: ←→↑↓↔↕⇐⇒⇑⇓⇔⇕
##

# 下線 #
ギリシア文字: αβγδεζηθικλμνξοπρστυφχψω
##

# 見出し2 #
高度機能テスト完了評価
##

このサンプルで検証した高度機能：

# 枠線 #
### 実装済み高度機能
✅ 多層ネスト構造の正確な処理
✅ 高密度記法配置での安定動作
✅ 脚注記法の基本検証
✅ エラーハンドリングの頑健性
✅ Unicode・多言語対応
✅ 複雑なドキュメント構造の処理

### 将来実装予定機能
🔄 傍注（ルビ）記法の完全実装
🔄 高度な表組み機能
🔄 レイアウト機能の拡張
🔄 メタデータ自動生成
##

# 見出し3 #
パフォーマンス評価指標
##

この高度機能テストファイルの処理において、以下の指標で性能を評価：

• # ハイライト color=green # 処理時間 ## : 1秒以内での完了
• # ハイライト color=blue # メモリ効率 ## : 最小限のメモリ使用量
• # ハイライト color=orange # レンダリング品質 ## : 全記法の正確な表現
• # ハイライト color=red # エラー処理 ## : 不正記法の適切な処理

高度機能テスト完了。