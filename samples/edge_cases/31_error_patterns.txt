# 見出し1 #
Kumihan-Formatter エラーパターンテストサンプル
##

このファイルは、Kumihan-Formatterのエラーハンドリング能力を包括的にテストするために作成されました。
様々なエラーパターンに対する適切な処理と回復能力を検証します。

# 見出し2 #
エラーパターンテスト概要
##

# 情報 #
## 🎯 エラーテスト目標

- # 太字 # 構文エラー処理 ## - 不正記法の適切な処理
- # 太字 # 回復能力 ## - エラー後の正常処理継続
- # 太字 # エラーメッセージ ## - ユーザーフレンドリーな通知
- # 太字 # システム安定性 ## - クラッシュ防止
- # 太字 # データ整合性 ## - 部分的エラーでのデータ保護
##

# 見出し2 #
Category 1: 基本構文エラー
##

# 見出し3 #
開始マーカーエラー
##

# 注意 #
以下は意図的な構文エラーです。システムがこれらを適切に処理できるかテストします。
##

不正な開始マーカー：

## 太字 # 二重ハッシュ開始 ##

### 太字 # 三重ハッシュ開始 ##

#### 太字 # 四重ハッシュ開始 ##

開始マーカー内のスペース：

# 太 字 # スペース入り開始マーカー ##

#太字# スペースなし開始マーカー ##

# 見出し3 #
終了マーカーエラー
##

不正な終了マーカー：

# 太字 # 単一ハッシュ終了 #

# 太字 # 三重ハッシュ終了 ###

# 太字 # 四重ハッシュ終了 ####

終了マーカー前のスペース：

# 太字 # スペース付き終了 ##

# 太字 # タブ付き終了	##

# 見出し3 #
マーカー欠損エラー
##

開始マーカーのみ：

# 太字 # 終了マーカーなし

# イタリック # 終了マーカーなし

# ハイライト color=red # 終了マーカーなし

終了マーカーのみ：

終了マーカーのみ ##

別の終了マーカー ##

複数の終了マーカー ##

# 見出し2 #
Category 2: キーワードエラー
##

# 見出し3 #
存在しないキーワード
##

# 存在しないキーワード # テストテキスト ##

# 未定義記法 # テストテキスト ##

# 無効な装飾 # テストテキスト ##

# 間違ったキーワード # テストテキスト ##

# 見出し3 #
キーワードの書き間違い
##

# 太じ # 太字の書き間違い ##

# イタリツク # イタリックの書き間違い ##

# 下せん # 下線の書き間違い ##

# ハイライト # ハイライトのスペルミス ##

# 見出し3 #
大文字小文字混在エラー
##

# 太字 # 正常 ## vs # 太字 # 大文字混在 ##

# ITALIC # 全部大文字 ##

# Underline # 先頭大文字 ##

# hAiLiGhT color=red # 不規則大文字 ##

# 見出し2 #
Category 3: 属性エラー
##

# 見出し3 #
カラー属性エラー
##

存在しない色名：

# ハイライト color=purple123 # 存在しない色 ##

# 太字 color=rainbow # 虹色（存在しない） ##

# イタリック color=transparent # 透明（存在しない） ##

不正な16進数カラーコード：

# ハイライト color=#gggggg # 不正な16進数文字 ##

# ハイライト color=#12345 # 桁数不足 ##

# ハイライト color=#1234567 # 桁数過多 ##

# ハイライト color=ff0000 # #記号なし ##

# 見出し3 #
属性値エラー
##

空の属性値：

# ハイライト color= # 空のカラー指定 ##

# ハイライト color="" # 空文字カラー指定 ##

スペースを含む属性値：

# ハイライト color= red # 先頭スペース ##

# ハイライト color=red  # 末尾スペース ##

# ハイライト color= r e d # 間にスペース ##

# 見出し3 #
属性構文エラー
##

イコール記号エラー：

# ハイライト colorred # イコールなし ##

# ハイライト color==red # 二重イコール ##

# ハイライト color=red=blue # 複数イコール ##

# ハイライト color:red # コロン使用 ##

属性名エラー：

# ハイライト colour=red # スペルミス ##

# ハイライト COLOR=red # 大文字 ##

# ハイライト col=red # 省略形 ##

# 見出し2 #
Category 4: ネスト構造エラー
##

# 見出し3 #
不適切なネスト
##

ブロック記法の不正ネスト：

# 枠線 #
外側の枠線
# 枠線 #
内側の枠線（不正）
##
##

# 注意 #
注意ブロック
# 情報 #
情報ブロック（不正ネスト）
##
##

# 見出し3 #
ネスト深度超過
##

# 折りたたみ #
20層ネスト構造エラーテスト：

# 枠線 # L1
# 注意 # L2
# 情報 # L3
# 折りたたみ # L4
# 引用 # L5
# 太字 # L6
# イタリック # L7
# 下線 # L8
# ハイライト color=red # L9
# コード # L10
# 太字 color=blue # L11
# イタリック color=green # L12
# 下線 color=yellow # L13
# ハイライト color=purple # L14
# 太字 # L15
# イタリック # L16
# 下線 # L17
# ハイライト color=orange # L18
# コード # L19
# 太字 # L20最深層 ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
##

# 見出し3 #
交差ネスト
##

# 太字 # 開始1 # イタリック # 開始2 ## 太字継続 ## イタリック継続

# ハイライト color=red # 赤開始 # ハイライト color=blue # 青開始 ## 赤継続 ## 青継続

# 見出し2 #
Category 5: 文字エンコーディングエラー
##

# 見出し3 #
無効なUTF-8シーケンス
##

# 注意 #
以下は文字エンコーディング関連のエラーパターンです。
実際の無効なバイトシーケンスの代わりに、問題を示唆する例を使用します。
##

疑似的な無効エンコーディング：

# 太字 # 無効エンコーディング例：\xFF\xFE\xFD ##

# ハイライト color=red # バイト境界エラー例：\xC0\x80 ##

# 見出し3 #
文字正規化エラー
##

結合文字の問題：

# 太字 # é (単一文字) vs é (e + 結合アクセント) ##

# イタリック # が (単一文字) vs が (か + 濁点) ##

# 見出し2 #
Category 6: ファイル処理エラー
##

# 見出し3 #
行末処理エラー
##

異なる改行コード：

Unix改行（LF）: # 太字 # Unix改行テスト ##
Windows改行（CRLF）: # 太字 # Windows改行テスト ##
Mac改行（CR）: # 太字 # Mac改行テスト ##

# 見出し3 #
ファイル境界エラー
##

ファイル開始での不完全記法：
# 太字 # ファイル開始不完全

ファイル終了での不完全記法：
不完全記法でファイル終了 # 太字 # 

# 見出し2 #
Category 7: メモリ・リソースエラー
##

# 見出し3 #
大量データエラー
##

極端に長い記法：

# 太字

# 見出し3 #
循環参照エラー
##

# 注意 #
理論的な循環参照パターン（実際には発生しにくい）
##

自己参照的な構造の試行（パーサーテスト用）：

# 折りたたみ #
このブロックは自分自身を参照しようとしています
# 引用 #
"この引用は上位ブロックを参照しています"
##
##

# 見出し2 #
Category 8: 競合状態・同期エラー
##

# 見出し3 #
並行処理エラー
##

# 情報 #
並行処理時の記法競合状態テスト
##

同時アクセスパターン（シミュレーション）：

スレッド1: # 太字 # 同時処理テスト1 ##
スレッド2: # 太字 # 同時処理テスト2 ##
スレッド3: # 太字 # 同時処理テスト3 ##

# 見出し2 #
Category 9: 回復・継続テスト
##

# 見出し3 #
エラー後の正常処理継続
##

エラー前の正常記法：
# 太字 # 正常な太字1 ##

意図的エラー記法：
# 存在しない記法 # エラーパターン ##

エラー後の正常記法：
# 太字 # 正常な太字2 ##

# 見出し3 #
複数エラー耐性テスト
##

連続エラーパターン：

# 不正記法1 # エラー1 ##
## 不正記法2 # エラー2 ##
### 不正記法3 # エラー3 ##

正常記法での回復：
# 太字 # 回復確認 ##

# 見出し2 #
Category 10: セキュリティ関連エラー
##

# 見出し3 #
インジェクション攻撃パターン
##

# 注意 #
以下はセキュリティテスト用の無害化されたパターンです。
##

HTMLインジェクション試行：

# 太字 # <script>alert('test')</script> ##

# ハイライト color=red # <img src="x" onerror="alert(1)"> ##

SQLインジェクション風パターン：

# コード # SELECT * FROM users WHERE id='1'; DROP TABLE users; -- ##

# 見出し3 #
パストラバーサル攻撃パターン
##

# 太字 # ../../../etc/passwd ##

# ハイライト color=blue # ..\\..\\..\\windows\\system32\\config\\sam ##

# 見出し2 #
エラーパターンテスト結果評価
##

# 枠線 #
## 🔧 エラーハンドリング評価基準

### Level 1: 基本エラー処理
✅ # ハイライト color=green # 構文エラー検出 ## - 不正記法の識別
✅ # ハイライト color=green # グレースフル処理 ## - システムクラッシュ防止
✅ # ハイライト color=green # エラーログ出力 ## - 問題箇所の特定

### Level 2: 回復能力
✅ # ハイライト color=blue # 処理継続 ## - エラー後の正常動作
✅ # ハイライト color=blue # 部分処理 ## - 可能な部分の処理実行
✅ # ハイライト color=blue # データ整合性維持 ## - 破損データの防止

### Level 3: ユーザビリティ
✅ # ハイライト color=purple # わかりやすいエラーメッセージ ## - 原因と対策の提示
✅ # ハイライト color=purple # 行番号表示 ## - エラー位置の特定
✅ # ハイライト color=purple # 修正提案 ## - 可能な修正方法の提示

### Level 4: セキュリティ
✅ # ハイライト color=orange # インジェクション防止 ## - 不正コードの無害化
✅ # ハイライト color=orange # リソース保護 ## - メモリ・CPU使用量制限
✅ # ハイライト color=orange # ログサニタイズ ## - 機密情報の保護

### 期待される動作パターン
1. # 太字 # エラー検出 ## → 適切なエラーメッセージ出力
2. # 太字 # 影響範囲特定 ## → 最小限の処理中断
3. # 太字 # 回復処理 ## → 可能な限り正常処理を継続
4. # 太字 # ログ記録 ## → デバッグ・改善に必要な情報保存
##

# 情報 #
## 📊 エラーテスト統計

テスト実行したエラーパターン：
- 基本構文エラー: # ハイライト color=blue # 15パターン ##
- キーワードエラー: # ハイライト color=green # 12パターン ##
- 属性エラー: # ハイライト color=yellow # 18パターン ##
- ネスト構造エラー: # ハイライト color=purple # 8パターン ##
- エンコーディングエラー: # ハイライト color=orange # 6パターン ##
- ファイル処理エラー: # ハイライト color=red # 4パターン ##
- リソースエラー: # ハイライト color=cyan # 3パターン ##
- 競合状態エラー: # ハイライト color=pink # 3パターン ##
- 回復テスト: # ハイライト color=lime # 5パターン ##
- セキュリティテスト: # ハイライト color=gray # 6パターン ##

**総計**: # 太字 color=red # 80種類のエラーパターン ## をテスト
##

# 引用 #
"優れたシステムは正常時の性能ではなく、
異常時の # 太字 # 回復能力 ## と # ハイライト color=blue # 安定性 ## で評価される。"
— ソフトウェア品質工学の原則
##

エラーパターンテスト完了 - システムの堅牢性と信頼性を徹底検証。