{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(make lint:*)",
      "Bash({{LANGUAGE}} -m {{TYPE_CHECKER}}:*)",
      "Bash(git add:*)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "Bash(git commit:*)",
      "Bash({{TEST_COMMAND}})",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash({{LANGUAGE}}:*)",
      "Bash(git checkout:*)",
      "Bash(sed:*)",
      "Bash(cp:*)",
      "Bash(ls:*)",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__initial_instructions",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__get_current_config",
      "mcp__serena__replace_regex",
      "Bash(mv:*)",
      "mcp__serena__list_dir",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__find_file",
      "mcp__serena__think_about_task_adherence",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "mcp__serena__read_memory",
      "mcp__serena__find_symbol",
      "mcp__serena__search_for_pattern",
      "WebFetch(domain:github.com)",
      "Bash(make test:*)",
      "mcp__serena__insert_after_symbol",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__summarize_changes",
      "Bash(git pull:*)",
      "Bash(git rebase:*)",
      "mcp__serena__list_memories",
      "mcp__serena__get_symbols_overview",
      "Bash(gh pr view:*)",
      "Bash(gh issue view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue edit:*)",
      "Bash(rg:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh issue create:*)",
      "Bash(gh label:*)",
      "Bash(gh issue close:*)",
      "Bash(rm:*)",
      "Bash(chmod:*)",
      "Bash(make:*)",
      "Bash(gh pr list:*)",
      "Bash(mkdir:*)",
      "Bash(pkill:*)",
      "Bash(git stash:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh pr:*)",
      "Bash(git reset:*)",
      "Bash(gh:*)",
      "Bash(git merge:*)",
      "mcp__context7__resolve-library-id",
      "mcp__gemini-cli__chat",
      "Bash(source:*)",
      "mcp__gemini-cli__analyzeFile",
      "mcp__serena__switch_modes",
      "Bash(git branch:*)",
      "Bash(git rm:*)",
      "Bash(cat:*)",
      "Bash(true)",
      "Bash(for:*)",
      "Bash(do echo \"Converting: $file\")",
      "Bash(done)",
      "Bash(do echo \"Processing $category:\")",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"  Converting: $(basename \"$file\")\")",
      "Bash(timeout 60 {{PROJECT_COMMAND}}:*)",
      "Bash(/dev/null)",
      "Bash(fi)",
      "mcp__gemini-cli__googleSearch",
      "mcp__serena__write_memory",
      "Bash(git remote:*)",
      "Bash({{TEST_RUNNER}}:*)",
      "Bash(git restore:*)",
      "Bash(tree:*)",
      "Bash(do)",
      "Bash(echo \"Processing $file\")",
      "Bash({{FORMATTER}}:*)",
      "Bash({{LINTER}}:*)",
      "Bash(touch:*)",
      "mcp__serena__insert_before_symbol",
      "Bash(timeout:*)",
      "Bash(claude mcp add:*)",
      "Bash(pip install:*)",
      "Bash(pip3 install:*)",
      "Bash({{TYPE_CHECKER}}:*)",
      "Bash(env)",
      "Bash(claude mcp:*)",
      "mcp__context7__get-library-docs",
      "WebFetch(domain:modelcontextprotocol.io)",
      "Bash(npm view:*)",
      "Bash(npx:*)",
      "Bash(claude code config --help)",
      "Bash(claude config get:*)",
      "Bash(claude config --help)",
      "Bash(claude:*)",
      "WebFetch(domain:zenn.dev)",
      "WebFetch(domain:docs.anthropic.com)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "context7",
    "gemini-cli",
    "memory",
    "deepview",
    "sequential-thinking"
  ]
}