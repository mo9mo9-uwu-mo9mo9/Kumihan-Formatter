name: Quality Optional - Weekly Quality Checks

on:
  schedule:
    # 毎週日曜日 02:00 UTC (日本時間 11:00) に実行
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # 手動実行も可能
  push:
    branches: [ main ]
    paths:
      - 'scripts/quality_*.py'
      - 'scripts/tiered_*.py'

env:
  PYTHON_VERSION: "3.12"

jobs:
  tiered-quality-gate:
    name: Tiered Quality Gate Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 履歴全体を取得

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run Tiered Quality Gate Check
        id: quality-gate
        run: |
          echo "Running tiered quality gate analysis..."
          python scripts/tiered_quality_gate.py > quality_gate_report.txt
          
          # 結果をGitHub Actions出力に表示
          echo "QUALITY_GATE_REPORT<<EOF" >> $GITHUB_OUTPUT
          cat quality_gate_report.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Quality Gate Report
        uses: actions/upload-artifact@v4
        with:
          name: quality-gate-report
          path: quality_gate_report.txt

  gradual-improvement-planning:
    name: Gradual Improvement Planning
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Generate Improvement Plan
        id: improvement-plan
        run: |
          echo "Generating gradual improvement plan..."
          python scripts/gradual_improvement_planner.py > improvement_plan.md
          
          # 結果をGitHub Actions出力に表示
          echo "IMPROVEMENT_PLAN<<EOF" >> $GITHUB_OUTPUT
          cat improvement_plan.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Improvement Plan
        uses: actions/upload-artifact@v4
        with:
          name: improvement-plan
          path: improvement_plan.md

  root-cause-analysis:
    name: TDD Root Cause Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run Root Cause Analysis
        id: root-cause
        run: |
          echo "Running TDD root cause analysis..."
          python scripts/tdd_root_cause_analyzer.py > root_cause_analysis.json
          
          # 結果をGitHub Actions出力に表示
          echo "ROOT_CAUSE_ANALYSIS<<EOF" >> $GITHUB_OUTPUT
          cat root_cause_analysis.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Root Cause Analysis
        uses: actions/upload-artifact@v4
        with:
          name: root-cause-analysis
          path: root_cause_analysis.json

  system-integration-test:
    name: TDD System Integration Test
    runs-on: ubuntu-latest
    timeout-minutes: 35
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run TDD System Integration Test
        id: integration-test
        run: |
          echo "Running comprehensive TDD system integration test..."
          python scripts/tdd_system_integration_test.py > integration_test_report.json
          
          # 結果をGitHub Actions出力に表示
          echo "INTEGRATION_TEST_REPORT<<EOF" >> $GITHUB_OUTPUT
          cat integration_test_report.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Integration Test Report
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-report
          path: integration_test_report.json

  quality-summary:
    name: Quality Summary Report
    runs-on: ubuntu-latest
    needs: [tiered-quality-gate, gradual-improvement-planning, root-cause-analysis, system-integration-test]
    if: always()
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate Summary Report
        run: |
          echo "# 📊 Weekly Quality Report - $(date '+%Y-%m-%d')" > quality_summary.md
          echo "" >> quality_summary.md
          
          echo "## 🎯 Quality Gate Status" >> quality_summary.md
          if [ -f quality-gate-report/quality_gate_report.txt ]; then
            echo '```' >> quality_summary.md
            cat quality-gate-report/quality_gate_report.txt >> quality_summary.md
            echo '```' >> quality_summary.md
          else
            echo "❌ Quality Gate report not available" >> quality_summary.md
          fi
          echo "" >> quality_summary.md
          
          echo "## 🔄 Improvement Plan" >> quality_summary.md
          if [ -f improvement-plan/improvement_plan.md ]; then
            cat improvement-plan/improvement_plan.md >> quality_summary.md
          else
            echo "❌ Improvement plan not available" >> quality_summary.md
          fi
          echo "" >> quality_summary.md
          
          echo "## 🔍 Root Cause Analysis" >> quality_summary.md
          if [ -f root-cause-analysis/root_cause_analysis.json ]; then
            echo '```json' >> quality_summary.md
            cat root-cause-analysis/root_cause_analysis.json >> quality_summary.md
            echo '```' >> quality_summary.md
          else
            echo "❌ Root cause analysis not available" >> quality_summary.md
          fi
          echo "" >> quality_summary.md
          
          echo "## 🧪 Integration Test Status" >> quality_summary.md
          if [ -f integration-test-report/integration_test_report.json ]; then
            echo '```json' >> quality_summary.md
            cat integration-test-report/integration_test_report.json >> quality_summary.md
            echo '```' >> quality_summary.md
          else
            echo "❌ Integration test report not available" >> quality_summary.md
          fi
          
          echo "" >> quality_summary.md
          echo "---" >> quality_summary.md
          echo "Generated by GitHub Actions - $(date)" >> quality_summary.md

      - name: Upload Quality Summary
        uses: actions/upload-artifact@v4
        with:
          name: quality-summary-report
          path: quality_summary.md

      - name: Display Summary
        run: |
          echo "📊 Weekly Quality Check Summary:"
          echo "================================"
          cat quality_summary.md

  # 結果通知 (オプション)
  notify-results:
    name: Notify Quality Results
    runs-on: ubuntu-latest
    needs: [quality-summary]
    if: always()
    steps:
      - name: Download Quality Summary
        uses: actions/download-artifact@v4
        with:
          name: quality-summary-report

      - name: Create Issue on Quality Degradation
        if: failure()
        run: |
          echo "Quality checks detected issues. Consider creating an issue for tracking."
          echo "Summary available in artifacts."

      - name: Quality Check Success
        if: success()
        run: |
          echo "✅ Weekly quality checks completed successfully"
          echo "All quality metrics are within acceptable ranges"