name: Test and Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Code formatting check with Black
      run: |
        black --check --diff kumihan_formatter/

    - name: Import sorting check with isort
      run: |
        isort --check-only --diff kumihan_formatter/

    - name: Linting with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 kumihan_formatter/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 kumihan_formatter/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Test with pytest
      run: |
        pytest dev/tests/ -v --tb=short

    - name: Test with pytest (coverage)
      if: matrix.python-version == '3.11'
      run: |
        pytest dev/tests/ --cov=kumihan_formatter --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install mypy

    - name: Type checking with mypy
      run: |
        mypy kumihan_formatter/ --ignore-missing-imports --no-strict-optional
      continue-on-error: true

  # integration-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Python 3.11
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.11'

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -e ".[dev]"

  #   - name: Integration tests
  #     run: |
  #       pytest dev/tests/integration/ -v --tb=short

  #   - name: CLI functionality test
  #     run: |
  #       # Basic CLI help test
  #       kumihan --help
  #       
  #       # Sample generation test
  #       mkdir -p test_output
  #       kumihan sample --output-dir test_output
  #       
  #       # Check if sample files were created
  #       if [ -f test_output/*.txt ]; then
  #         echo "✅ Sample generation successful"
  #       else
  #         echo "❌ Sample generation failed"
  #         ls -la test_output/
  #         exit 1
  #       fi

  #   - name: Cleanup test files
  #     run: |
  #       rm -rf test_output/