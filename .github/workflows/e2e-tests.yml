name: E2E Tests (Disabled - Under Reconstruction)

on:
  workflow_dispatch:  # 手動実行のみ
  # 一時的に自動実行を無効化
  # push:
  #   branches: [ main ]
  #   paths:
  #     - 'kumihan_formatter/**'
  #     - 'dev/tests/e2e/**'
  #     - 'examples/**'
  #     - 'pyproject.toml'
  # pull_request:
  #   branches: [ main ]
  #   paths:
  #     - 'kumihan_formatter/**'
  #     - 'dev/tests/e2e/**'
  #     - 'examples/**'
  #     - 'pyproject.toml'

jobs:
  e2e-tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.11']
        exclude:
          # macOS and Windows で Python 3.9 のみテスト（高速化）
          - os: macos-latest
            python-version: '3.11'
          - os: windows-latest
            python-version: '3.11'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Create test directories
      run: |
        mkdir -p test_output
        mkdir -p temp_workspace
      shell: bash
    
    - name: Run E2E Basic Workflow Tests
      run: |
        pytest dev/tests/e2e/test_basic_workflow.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Run E2E File Operations Tests
      run: |
        pytest dev/tests/e2e/test_file_operations.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Run E2E Output Quality Tests
      run: |
        pytest dev/tests/e2e/test_output_quality.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Run E2E Error Recovery Tests
      run: |
        pytest dev/tests/e2e/test_error_recovery.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Generate E2E Test Report
      if: always()
      run: |
        pytest dev/tests/e2e/ --tb=short --junit-xml=e2e-test-results.xml
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Upload E2E Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          e2e-test-results.xml
          test_output/
    
    - name: Check for test output files
      if: always()
      run: |
        echo "=== Generated test output files ==="
        find test_output -name "*.html" -type f | head -10 || echo "No HTML files found"
        echo "=== Test workspace contents ==="
        find temp_workspace -type f | head -10 || echo "No workspace files found"
      shell: bash

  e2e-cross-platform-validation:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all test artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./test-artifacts
    
    - name: Validate cross-platform consistency
      run: |
        echo "=== Cross-platform E2E Test Results ==="
        ls -la test-artifacts/
        
        # 各プラットフォームの結果ファイルをチェック
        for artifact in test-artifacts/*/; do
          echo "Platform: $(basename "$artifact")"
          if [ -f "$artifact/e2e-test-results.xml" ]; then
            echo "  Test results available: ✓"
            grep -c "testcase" "$artifact/e2e-test-results.xml" || echo "  No test cases found"
          else
            echo "  Test results missing: ✗"
          fi
        done
        
        echo "=== E2E Test Validation Complete ==="

  e2e-performance-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run E2E Performance Baseline
      run: |
        pytest dev/tests/e2e/test_basic_workflow.py::TestBasicWorkflow::test_performance_baseline -v
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Check E2E execution times
      run: |
        echo "=== E2E Performance Check ==="
        echo "Running basic performance validation..."
        
        # 簡単なパフォーマンステスト
        time python -m kumihan_formatter.cli examples/01-quickstart.txt -o temp_perf_output --no-preview
        
        echo "E2E performance check completed"