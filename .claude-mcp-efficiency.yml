# Claude Code MCP効率化専用設定ファイル
# Issue804 AI最適化システム統合対応
# Phase B.4システム（68.8%削減達成）との完全統合設定

project_name: "Kumihan-Formatter"
config_type: "mcp_efficiency"
version: "1.0.0"
created: "2025-08-05"

# 🚀 MCP効率化コア設定
mcp_core:
  # 基本効率化設定
  efficiency_mode: "ai_optimized"      # standard, optimized, ai_optimized
  target_reduction: 68.8               # Phase B.4目標削減率（%）
  auto_adjustment: true                # 自動調整機能

  # serenaツール最適化
  serena_optimization:
    # 動的パラメータ制御
    dynamic_control:
      enabled: true
      ai_prediction: true              # AI予測駆動制御
      context_awareness: true          # コンテキスト認識
      adaptive_scaling: true           # 適応的スケーリング

    # パラメータ最適化設定
    parameter_optimization:
      max_answer_chars:
        strategy: "ai_adaptive"        # fixed, adaptive, ai_adaptive
        base_value: 200000
        min_threshold: 50000
        max_threshold: 500000
        scaling_factor: 1.5
        ai_adjustment_rate: 0.2

      context_lines:
        before:
          base: 3
          ai_max: 15
          context_scaling: true
        after:
          base: 3
          ai_max: 15
          context_scaling: true

      search_optimization:
        smart_filtering: true
        result_ranking: true
        duplicate_elimination: true
        relevance_scoring: true

# 🤖 AI統合最適化
ai_integration:
  # Phase B.4システム統合
  phase_b4_integration:
    enabled: true
    prediction_engine: "kumihan_formatter.core.optimization.ai_optimization.prediction_engine"
    integration_manager: "kumihan_formatter.core.optimization.ai_optimization.ai_integration_manager"
    autonomous_controller: "kumihan_formatter.core.optimization.ai_optimization.autonomous_controller"

  # 予測駆動最適化
  prediction_optimization:
    enabled: true
    prediction_accuracy_threshold: 85.0
    cache_predictions: true
    cache_duration: 3600              # 1時間

    # 予測対象操作
    predict_operations:
      - "find_symbol"
      - "search_for_pattern"
      - "get_symbols_overview"
      - "replace_symbol_body"
      - "insert_after_symbol"

    # 予測特徴量
    features:
      - "operation_type"
      - "content_size"
      - "context_complexity"
      - "recent_operations"
      - "user_patterns"

  # 学習システム統合
  learning_integration:
    online_learning: true
    model_update_frequency: "daily"    # hourly, daily, weekly
    feedback_collection: true
    performance_tracking: true

# 📊 効果測定・監視システム
monitoring:
  # リアルタイム監視
  real_time:
    enabled: true
    token_usage_tracking: true
    response_time_monitoring: true
    efficiency_calculation: true

  # 効果測定指標
  metrics:
    primary:
      - "token_reduction_rate"         # 主要指標：削減率
      - "response_time"                # 応答時間
      - "prediction_accuracy"          # 予測精度

    secondary:
      - "cache_hit_rate"               # キャッシュヒット率
      - "operation_efficiency"         # 操作効率
      - "ai_intervention_rate"         # AI介入率

  # アラート設定
  alerts:
    efficiency_threshold: 60.0         # 効率低下アラート閾値（%）
    response_time_threshold: 5.0       # 応答時間アラート閾値（秒）
    accuracy_threshold: 80.0           # 精度低下アラート閾値（%）

  # レポート生成
  reporting:
    enabled: true
    frequency: "daily"                 # hourly, daily, weekly
    format: "json"                     # json, yaml, csv
    output_file: ".mcp-efficiency-report.json"

# 🔧 自動最適化機能
auto_optimization:
  # 自動調整機能
  auto_adjustment:
    enabled: true
    adjustment_strategy: "conservative" # conservative, balanced, aggressive
    min_adjustment_interval: 300       # 5分間隔
    max_adjustment_per_hour: 10

  # 最適化トリガー
  triggers:
    efficiency_drop:
      threshold: 5.0                   # 5%効率低下で発動
      action: "parameter_adjustment"

    response_time_increase:
      threshold: 2.0                   # 2秒応答時間増で発動
      action: "cache_optimization"

    prediction_accuracy_drop:
      threshold: 10.0                  # 10%精度低下で発動
      action: "model_retrain"

  # 最適化戦略
  strategies:
    token_reduction:
      - "smart_filtering"
      - "context_compression"
      - "prediction_caching"
      - "batch_processing"

    response_optimization:
      - "parallel_processing"
      - "cache_warming"
      - "query_optimization"
      - "result_streaming"

# 🛡️ エラーハンドリング・フォールバック
error_handling:
  # フォールバック設定
  fallback:
    enabled: true
    fallback_mode: "safe_default"      # safe_default, previous_config, manual
    recovery_attempts: 3
    recovery_timeout: 30               # 30秒

  # エラー分類・対応
  error_responses:
    ai_system_error:
      action: "fallback_to_standard"
      log_level: "error"
      notification: true

    parameter_optimization_error:
      action: "reset_to_baseline"
      log_level: "warning"
      notification: false

    performance_degradation:
      action: "gradual_rollback"
      log_level: "warning"
      notification: true

  # 復旧戦略
  recovery:
    automatic_recovery: true
    health_check_interval: 60          # 1分間隔
    recovery_validation: true
    performance_verification: true

# 📝 ログ・デバッグ設定
logging:
  # ログレベル
  level: "info"                        # debug, info, warning, error

  # ログ出力
  outputs:
    - type: "file"
      path: ".mcp-efficiency.log"
      rotation: "daily"
      max_size: "10MB"

    - type: "console"
      enabled: false                   # 本番では無効

  # ログ内容
  log_components:
    - "efficiency_metrics"
    - "ai_predictions"
    - "parameter_adjustments"
    - "error_events"
    - "performance_data"

# 🚀 将来拡張設定
future_extensions:
  # 実験的機能
  experimental:
    enabled: false
    deep_learning_integration: false   # Deep Learning統合（将来）
    multi_model_ensemble: false        # マルチモデル統合（将来）
    quantum_optimization: false        # 量子最適化（将来）

  # 拡張性設定
  extensibility:
    plugin_support: true
    custom_predictors: true
    external_ai_services: false        # 外部AIサービス統合準備
    api_integration: true

# 設定メタデータ
metadata:
  config_version: "1.0.0"
  compatibility:
    claude_code_version: ">=1.0.0"
    python_version: ">=3.12"
    serena_version: ">=1.0.0"

  dependencies:
    - "kumihan_formatter.core.optimization.ai_optimization"
    - "kumihan_formatter.core.utilities.performance_metrics"

  last_modified: "2025-08-05T00:00:00Z"
  checksum: "auto_generated"
