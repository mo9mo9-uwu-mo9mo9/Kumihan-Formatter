<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    <style>
        /* 既存のbase.html.j2のスタイルをベースに、トグル機能用スタイルを追加 */
        
        /* リセットCSS */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* 基本スタイル */
        body {
            font-family: {% if css_vars.font_family %}"{{ css_vars.font_family }}"{% else %}"Hiragino Kaku Gothic ProN", "Hiragino Sans", "Yu Gothic", "Meiryo", sans-serif{% endif %};
            line-height: {% if css_vars.line_height %}{{ css_vars.line_height }}{% else %}1.8{% endif %};
            color: {% if css_vars.text_color %}{{ css_vars.text_color }}{% else %}#333{% endif %};
            background-color: {% if css_vars.background_color %}{{ css_vars.background_color }}{% else %}#f9f9f9{% endif %};
            {% if has_toc %}padding: 0;{% else %}padding: 20px;{% endif %}
        }

        /* ========== GitHub風トグル機能 ========== */
        
        /* メインコンテナ */
        .main-container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        /* フローティングトグルボタン */
        .floating-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            padding: 8px;
            display: flex;
            flex-direction: column;
            gap: 4px;
        }
        
        .toggle-group {
            display: flex;
            background: #f6f8fa;
            border-radius: 6px;
            padding: 2px;
        }
        
        .floating-btn {
            background: transparent;
            border: none;
            padding: 8px 12px;
            font-size: 12px;
            font-weight: 500;
            color: #656d76;
            cursor: pointer;
            border-radius: 4px;
            transition: all 0.2s ease;
            white-space: nowrap;
        }
        
        .floating-btn:hover {
            color: #24292f;
            background: rgba(0,0,0,0.05);
        }
        
        .floating-btn.active {
            background: white;
            color: #24292f;
            font-weight: 600;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        
        .file-label {
            font-size: 10px;
            color: #656d76;
            text-align: center;
            padding: 2px 4px;
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
            max-width: 120px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        /* コンテンツ表示エリア */
        .content-display {
            position: relative;
            min-height: 400px;
        }
        
        /* プレビューコンテンツ */
        .preview-content {
            padding: 20px;
            display: block;
        }
        
        .preview-content.hidden {
            display: none;
        }
        
        /* ソースコンテンツ */
        .source-content {
            display: none;
            padding: 0;
        }
        
        .source-content.active {
            display: block !important;
        }
        
        .source-content pre {
            margin: 0;
            padding: 20px;
            background: #f6f8fa;
            border: none;
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
            font-size: 13px;
            line-height: 1.6;
            color: #24292f;
            overflow-x: auto;
            white-space: pre-wrap;
        }
        
        .source-content code {
            background: transparent;
            padding: 0;
            font-size: inherit;
            color: inherit;
        }
        
        
        /* シンタックスハイライト */
        .source-content .keyword {
            color: #d73a49;
            font-weight: bold;
        }
        
        .source-content .marker {
            color: #005cc5;
            font-weight: bold;
        }
        
        .source-content .content-text {
            color: #24292e;
        }
        
        .source-content .comment {
            color: #6a737d;
            font-style: italic;
        }
        
        /* ========== 目次（TOC）機能 ========== */
        
        /* TOCレイアウト用スタイル */
        .layout-wrapper {
            display: grid;
            grid-template-columns: minmax(300px, 25%) 1fr;
            max-width: 100%;
            margin: 0;
            gap: 20px;
            padding: 10px;
            min-height: 100vh;
        }
        
        .toc-sidebar {
            position: sticky;
            top: 10px;
            height: fit-content;
            max-height: calc(100vh - 20px);
            overflow-y: auto;
            background-color: white;
            padding: 15px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 5px;
            margin: 0;
        }
        
        .toc-sidebar.collapsed .toc-content {
            display: none;
        }
        
        .toc-sidebar.collapsed {
            width: auto;
            min-width: 50px;
        }
        
        .toc-toggle {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #f0f0f0;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            text-align: center;
            margin-bottom: 15px;
        }
        
        .toc-toggle:hover {
            background-color: #e0e0e0;
        }
        
        .toc-content h3 {
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 16px;
            border-bottom: 2px solid #333;
            padding-bottom: 5px;
        }
        
        .toc-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .toc-list ul {
            list-style: none;
            padding-left: 20px;
            margin: 5px 0;
        }
        
        .toc-list li {
            margin: 5px 0;
        }
        
        .toc-list a {
            color: #333;
            text-decoration: none;
            display: block;
            padding: 3px 5px;
            border-radius: 3px;
            transition: background-color 0.2s;
        }
        
        .toc-list a:hover {
            background-color: #f0f0f0;
        }
        
        .toc-list a.active {
            background-color: #e8e8e8;
            font-weight: bold;
        }
        
        /* スムーススクロール */
        html {
            scroll-behavior: smooth;
        }
        
        /* レスポンシブ対応 */
        @media (max-width: 768px) {
            body {
                {% if has_toc %}padding: 0;{% else %}padding: 10px;{% endif %}
            }
            
            /* 目次有効時のモバイルレイアウト */
            .layout-wrapper {
                grid-template-columns: 1fr;
                gap: 10px;
                padding: 10px;
            }
            
            .toc-sidebar {
                position: relative;
                max-height: none;
                order: -1;
            }
            
            .main-container {
                border-radius: 4px;
            }
            
            .floating-toggle {
                top: 10px;
                right: 10px;
                padding: 6px;
            }
            
            .floating-btn {
                padding: 6px 8px;
                font-size: 10px;
            }
            
            .toggle-group {
                flex-direction: column;
                gap: 2px;
            }
            
            .file-label {
                font-size: 9px;
                max-width: 100px;
            }
            
            .preview-content,
            .source-content pre {
                padding: 15px;
                font-size: 12px;
            }
        }
        
        /* 印刷時はサイドバーを非表示 */
        @media print {
            .toc-sidebar {
                display: none;
            }
            
            .layout-wrapper {
                display: block;
            }
            
            .floating-toggle {
                display: none;
            }
        }
        
        /* ========== 既存のスタイル（簡略版） ========== */
        
        .container {
            max-width: 100%;
            margin: 0;
            background-color: {% if css_vars.container_background %}{{ css_vars.container_background }}{% else %}white{% endif %};
            padding: 20px;
            border-radius: 5px;
        }

        /* 段落 */
        p {
            margin-bottom: 1.5em;
            text-align: justify;
        }

        /* 見出し */
        h1, h2, h3, h4, h5 {
            margin-top: 2em;
            margin-bottom: 1em;
            font-weight: bold;
            line-height: 1.4;
        }

        h1 {
            font-size: 2em;
            border-bottom: 3px solid #333;
            padding-bottom: 0.3em;
        }

        h2 {
            font-size: 1.5em;
            border-bottom: 2px solid #666;
            padding-bottom: 0.2em;
        }

        h3 {
            font-size: 1.3em;
        }

        h4 {
            font-size: 1.1em;
        }

        h5 {
            font-size: 1em;
        }

        /* リスト */
        ul, ol {
            margin-bottom: 1.5em;
            padding-left: 2em;
            list-style-position: outside;
        }

        li {
            margin-bottom: 0.5em;
            position: relative;
        }

        /* インライン要素 */
        strong {
            font-weight: bold;
            color: #000;
        }

        em {
            font-style: italic;
        }

        /* 枠線 */
        .box {
            border: 2px solid #333;
            padding: 1em;
            margin: 1em 0;
            border-radius: 5px;
            background-color: #fafafa;
        }

        /* ハイライト */
        .highlight {
            padding: 1em;
            margin: 1em 0;
            border-radius: 5px;
        }

        /* 折りたたみブロック（details要素）のスタイル */
        details {
            margin: 1em 0;
            padding: 0;
            border: 1px solid #d0d7de;
            border-radius: 6px;
            background-color: #ffffff;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
            transition: all 0.2s ease;
            overflow: hidden;
        }

        details:hover {
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            border-color: #9a9a9a;
        }

        details[open] {
            border-color: #007acc;
            box-shadow: 0 2px 8px rgba(0, 122, 204, 0.1);
        }

        details summary {
            padding: 0.8em 1em;
            font-weight: 600;
            cursor: pointer;
            background-color: #f6f8fa;
            border-radius: 5px 5px 0 0;
            user-select: none;
            transition: all 0.2s ease;
            position: relative;
            padding-left: 2.5em;
            list-style: none;
            color: #24292f;
            font-size: 1em;
            border-bottom: 1px solid #d0d7de;
        }
        
        /* Webkit browsers */
        details summary::-webkit-details-marker {
            display: none;
        }

        details[open] summary {
            background-color: #e7f3ff;
            border-bottom: 1px solid #007acc;
            color: #0969da;
        }

        details summary:hover {
            background-color: #e7f3ff;
        }

        details[open] summary:hover {
            background-color: #dbeafe;
        }

        /* 展開アイコン - 控えめなデザイン */
        details summary::before {
            content: '▶';
            position: absolute;
            left: 0.8em;
            top: 50%;
            transform: translateY(-50%);
            transition: all 0.2s ease;
            font-size: 0.8em;
            color: #656d76;
            width: auto;
            height: auto;
            line-height: 1;
        }

        details[open] summary::before {
            transform: translateY(-50%) rotate(90deg);
            color: #0969da;
        }

        /* 折りたたみコンテンツ */
        details > *:not(summary) {
            padding: 1.5em 1.2em;
            background-color: #ffffff;
            line-height: 1.7;
        }
        
        /* 折りたたみブロック内の段落のマージンを調整 */
        details > p {
            margin-bottom: 1em;
        }
        
        details > p:last-child {
            margin-bottom: 0;
        }

        /* 折りたたみブロック内の改行を適切に表示 */
        details br {
            display: block;
            margin: 0;
            line-height: 1.8;
        }
        
        /* 折りたたみブロック内のリスト要素 */
        details ul, details ol {
            margin: 1em 0;
            padding-left: 2em;
            line-height: 1.7;
        }
        
        details li {
            margin-bottom: 0.5em;
            line-height: 1.7;
        }
        
        details ul:first-child,
        details ol:first-child {
            margin-top: 0;
        }
        
        details ul:last-child,
        details ol:last-child {
            margin-bottom: 0;
        }
        
        /* 折りたたみブロック内のハイライト・枠線は最小高さを小さく */
        details .highlight,
        details .box {
            min-height: auto;
            padding: 0.8em;
        }
        
        /* 折りたたみブロック内の段落のマージンを調整 */
        details .highlight p,
        details .box p {
            margin-bottom: 0.5em;
        }
        
        details .highlight p:last-child,
        details .box p:last-child {
            margin-bottom: 0;
        }

        /* ネタバレブロック専用スタイル */
        details.spoiler {
            border-color: #d73a49;
            background-color: #ffffff;
        }

        details.spoiler:hover {
            border-color: #b31d28;
        }

        details.spoiler[open] {
            border-color: #d73a49;
        }

        details.spoiler summary {
            background-color: #fff5f5;
            color: #d73a49;
            border-bottom: 1px solid #fdbdbd;
        }

        details.spoiler summary:hover {
            background-color: #fef2f2;
        }

        details.spoiler[open] summary {
            background-color: #fff1f1;
            border-bottom: 1px solid #d73a49;
        }

        details.spoiler[open] summary:hover {
            background-color: #fef2f2;
        }

        details.spoiler summary::after {
            content: '⚠️';
            position: absolute;
            right: 1em;
            top: 50%;
            transform: translateY(-50%);
            font-size: 0.9em;
        }

        details.spoiler summary::before {
            color: #d73a49;
        }

        details.spoiler[open] summary::before {
            color: #d73a49;
        }

        /* ダークテーマでの折りたたみブロック調整 */
        {% if css_vars.background_color == '#1a1a1a' %}
        details {
            background-color: #2d2d2d;
            border-color: #404040;
        }

        details summary {
            background-color: #363636;
            color: #e0e0e0;
        }

        details summary:hover {
            background-color: #404040;
        }

        details.spoiler {
            background-color: #3a2f1a;
            border-color: #5a4a2a;
        }

        details.spoiler summary {
            background-color: #5a4a2a;
            color: #f0ad4e;
        }

        details.spoiler summary:hover {
            background-color: #6a5a3a;
        }
        {% endif %}

        /* レスポンシブ対応 */
        @media (max-width: 768px) {
            body {
                padding: 10px;
            }

            .container {
                padding: 15px;
            }

            h1 {
                font-size: 1.5em;
            }

            h2 {
                font-size: 1.3em;
            }
            
            .source-content,
            .result-content {
                padding: 15px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
    <!-- フローティングトグルボタン -->
    <div class="floating-toggle">
        <div class="toggle-group">
            <button class="floating-btn active" id="preview-btn" onclick="showPreview()">
                🎨 プレビュー
            </button>
            <button class="floating-btn" id="source-btn" onclick="showSource()">
                📝 記法
            </button>
        </div>
        <div class="file-label">{{ source_filename or "sample.txt" }}</div>
    </div>

    {% if has_toc %}
    <!-- 目次有効時のレイアウト -->
    <div class="layout-wrapper">
        <!-- 左サイドバー（目次） -->
        <aside class="toc-sidebar left">
            <button class="toc-toggle">目次</button>
            <nav class="toc-content">
                <h3>目次</h3>
                {{ toc_html | safe }}
            </nav>
        </aside>
        
        <!-- メインコンテンツ -->
        <main class="main-container">
            <!-- コンテンツ表示エリア -->
            <div class="content-display">
                <!-- プレビュー表示 -->
                <div class="preview-content" id="preview-content">
                    {{ body_content | safe }}
                </div>
                
                <!-- ソース表示 -->
                <div class="source-content" id="source-content">
                    <pre><code>{{ source_text | e }}</code></pre>
                </div>
                
            </div>
        </main>
    </div>
    {% else %}
    <!-- 目次なし時のレイアウト -->
    <div class="main-container">
        <!-- コンテンツ表示エリア -->
        <div class="content-display">
            <!-- プレビュー表示 -->
            <div class="preview-content" id="preview-content">
                {{ body_content | safe }}
            </div>
            
            <!-- ソース表示 -->
            <div class="source-content" id="source-content">
                <pre><code>{{ source_text | e }}</code></pre>
            </div>
            
        </div>
    </div>
    {% endif %}
    
    <script>
        // GitHub風タブ切り替え機能
        function showPreview() {
            // 全てのコンテンツを隠す
            hideAllContent();
            
            // プレビューを表示
            document.getElementById('preview-content').classList.remove('hidden');
            
            // ボタン状態をリセット
            resetButtonStates();
            document.getElementById('preview-btn').classList.add('active');
        }
        
        function showSource() {
            // 全てのコンテンツを隠す
            hideAllContent();
            
            // ソースを表示
            document.getElementById('source-content').classList.add('active');
            
            // ボタン状態をリセット
            resetButtonStates();
            document.getElementById('source-btn').classList.add('active');
        }
        
        
        // ヘルパー関数：全てのコンテンツを隠す
        function hideAllContent() {
            document.getElementById('preview-content').classList.add('hidden');
            document.getElementById('source-content').classList.remove('active');
        }
        
        // ヘルパー関数：全てのボタン状態をリセット
        function resetButtonStates() {
            document.getElementById('preview-btn').classList.remove('active');
            document.getElementById('source-btn').classList.remove('active');
        }
        
        // シンタックスハイライト（シンプル版）
        function applySyntaxHighlighting() {
            const sourceContent = document.querySelector('#source-content code');
            if (!sourceContent) return;
            
            let text = sourceContent.textContent;
            
            // ブロックマーカーのハイライト
            text = text.replace(/^;;;(.*)$/gm, '<span style="color: #005cc5; font-weight: bold;">;;;$1</span>');
            
            // リスト項目のハイライト  
            text = text.replace(/^- (.*)$/gm, '<span style="color: #005cc5; font-weight: bold;">-</span> $1');
            
            sourceContent.innerHTML = text;
        }
        
        
        
        // 目次機能（TOC）
        function setupTOC() {
            const tocToggle = document.querySelector('.toc-toggle');
            const tocSidebar = document.querySelector('.toc-sidebar');
            
            if (!tocToggle || !tocSidebar) return;
            
            // localStorage から状態を復元
            const tocState = localStorage.getItem('toc-collapsed');
            if (tocState === 'true') {
                tocSidebar.classList.add('collapsed');
                tocToggle.textContent = '▶';
            }
            
            tocToggle.addEventListener('click', function() {
                tocSidebar.classList.toggle('collapsed');
                const isCollapsed = tocSidebar.classList.contains('collapsed');
                
                // 状態を保存
                localStorage.setItem('toc-collapsed', isCollapsed);
                
                // ボタンテキストを更新
                tocToggle.textContent = isCollapsed ? '▶' : '目次';
            });
            
            // 現在位置のハイライト
            const headings = document.querySelectorAll('h1[id], h2[id], h3[id], h4[id], h5[id]');
            const tocLinks = document.querySelectorAll('.toc-list a');
            
            function updateActiveLink() {
                let currentHeading = null;
                
                // 現在表示されている最上部の見出しを見つける
                for (const heading of headings) {
                    const rect = heading.getBoundingClientRect();
                    if (rect.top <= 100) {
                        currentHeading = heading;
                    } else {
                        break;
                    }
                }
                
                // アクティブリンクを更新
                tocLinks.forEach(link => {
                    link.classList.remove('active');
                    if (currentHeading && link.getAttribute('href') === '#' + currentHeading.id) {
                        link.classList.add('active');
                    }
                });
            }
            
            // スクロールイベントでアクティブリンクを更新
            let scrollTimer;
            window.addEventListener('scroll', function() {
                clearTimeout(scrollTimer);
                scrollTimer = setTimeout(updateActiveLink, 50);
            });
            
            // 初期状態を設定
            updateActiveLink();
        }
        
        // ページ読み込み時の初期化
        document.addEventListener('DOMContentLoaded', function() {
            // 初期状態: プレビューを表示
            showPreview();
            applySyntaxHighlighting();
            setupTOC();
        });
    </script>
</body>
</html>