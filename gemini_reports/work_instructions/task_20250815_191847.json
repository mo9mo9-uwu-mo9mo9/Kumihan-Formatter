{
  "task_id": "task_20250815_191847",
  "title": "scripts/tech_debt_monitor.py に Phase 3 自動改善提案システムを実装してください。\n\n# Phase 3 実装仕様書\n\n## 追加機能要件:\n\n### 1. Qua",
  "complexity": "simple",
  "requirements": "scripts/tech_debt_monitor.py に Phase 3 自動改善提案システムを実装してください。\n\n# Phase 3 実装仕様書\n\n## 追加機能要件:\n\n### 1. QualityImprovementEngine クラス実装\n\n\n### 2. TechDebtMonitor への統合\n\n\n### 3. CLI 拡張\n\n\n## 実装要求:\n- 既存コードとの完全統合\n- 全メトリクス (cognitive complexity, maintainability, halstead, dead code) を活用\n- 具体的・実践的な改善提案の生成\n- ROIベースの優先度計算\n- HTML/Markdown両対応のレポート出力\n- MyPy strict mode 完全対応\n\n## 改善提案の例:\n- \"parallel_processor.py:36 parse_parallel_streaming()は複雑度15で高い。メソッド分割推奨 (優先度:高)\"\n- \"config.py: Halstead difficulty 3.4は適正範囲。維持推奨 (優先度:低)\"\n\n型注釈完備、高品質実装をお願いします。",
  "implementation_details": [
    "対象ディレクトリ: gemini_reports/",
    "以下の形式で既存ファイルを修正してください:",
    "",
    "# ファイル: 実際のファイルパス（例: gemini_reports/api_config.py）",
    "```python",
    "修正後の完全なファイル内容",
    "```",
    "",
    "主要な修正パターン:",
    "- 関数・メソッドに型注釈追加: def func(param: int) -> str:",
    "- 変数の型注釈: variable: Optional[str] = None",
    "- import文の最適化: from typing import Optional, Dict, List",
    "- Any型の具体的型への変更",
    "- Noneチェックの追加: if value is not None:",
    "",
    "⚠️ 重要: 新規ファイル作成ではなく、既存ファイルの直接修正を行ってください"
  ],
  "quality_criteria": [
    "MyPy strict mode 完全通過",
    "全関数・メソッドに適切な型注釈",
    "typing importの最適化完了",
    "既存機能の動作保証"
  ],
  "prohibited_actions": [
    "新規ファイルの作成",
    "tmp/配下への保存",
    "機能の削除・変更",
    "APIの破壊的変更"
  ],
  "expected_files": [
    "gemini_reports/内の既存Pythonファイル",
    "修正対象ファイルのみ（新規作成不可）"
  ],
  "dependencies": [
    "typing モジュール",
    "既存コードとの互換性維持"
  ],
  "estimated_time": 15,
  "created_by": "Claude",
  "created_at": "2025-08-15T19:18:47.761278"
}
